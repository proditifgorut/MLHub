<template>
  <div class="min-h-screen py-8">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-2">AI Assistant</h1>
        <p class="text-gray-600">Get intelligent help for your machine learning projects</p>
      </div>

      <div class="bg-white rounded-xl shadow-lg overflow-hidden flex flex-col" style="height: 75vh;">
        <div class="bg-blue-600 text-white p-4">
          <div class="flex items-center space-x-2">
            <Bot class="h-6 w-6" />
            <div>
              <h3 class="font-semibold">ML Assistant</h3>
              <p class="text-sm text-blue-100">Online â€¢ Ready to help</p>
            </div>
          </div>
        </div>

        <div class="flex-1 overflow-y-auto p-4 space-y-4" ref="messagesContainer">
          <transition-group name="message">
            <div
              v-for="message in messages"
              :key="message.id"
              :class="['flex', message.isBot ? 'justify-start' : 'justify-end']"
            >
              <div :class="['flex items-start space-x-2 max-w-xs lg:max-w-md', message.isBot ? 'flex-row' : 'flex-row-reverse space-x-reverse']">
                <div :class="['w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0', message.isBot ? 'bg-blue-100' : 'bg-gray-100']">
                  <Bot v-if="message.isBot" class="h-4 w-4 text-blue-600" />
                  <User v-else class="h-4 w-4 text-gray-600" />
                </div>
                <div :class="['rounded-lg p-3', message.isBot ? 'bg-gray-100 text-gray-900' : 'bg-blue-600 text-white']">
                  <p class="text-sm">{{ message.text }}</p>
                  <p :class="['text-xs mt-1', message.isBot ? 'text-gray-500' : 'text-blue-100']">
                    {{ message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) }}
                  </p>
                </div>
              </div>
            </div>
          </transition-group>

          <div v-if="isTyping" class="flex justify-start">
            <div class="flex items-start space-x-2">
              <div class="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center">
                <Bot class="h-4 w-4 text-blue-600" />
              </div>
              <div class="bg-gray-100 rounded-lg p-3">
                <div class="flex space-x-1">
                  <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                  <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style="animation-delay: 0.1s"></div>
                  <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style="animation-delay: 0.2s"></div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="border-t border-gray-200 p-4">
          <p class="text-sm text-gray-600 mb-2">Quick actions:</p>
          <div class="flex flex-wrap gap-2">
            <button
              v-for="action in quickActions"
              :key="action"
              @click="inputText = action"
              class="text-sm bg-gray-100 text-gray-700 px-3 py-1 rounded-full hover:bg-gray-200 transition-colors"
            >
              {{ action }}
            </button>
          </div>
        </div>

        <div class="border-t border-gray-200 p-4">
          <div class="flex items-center space-x-2">
            <button class="p-2 text-gray-400 hover:text-gray-600 transition-colors">
              <Paperclip class="h-5 w-5" />
            </button>
            <div class="flex-1 relative">
              <textarea
                v-model="inputText"
                @keypress.enter.prevent="handleSendMessage"
                placeholder="Ask anything about machine learning..."
                class="w-full p-3 border border-gray-300 rounded-lg resize-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                rows="1"
              ></textarea>
            </div>
            <button class="p-2 text-gray-400 hover:text-gray-600 transition-colors">
              <Mic class="h-5 w-5" />
            </button>
            <button
              @click="handleSendMessage"
              :disabled="!inputText.trim()"
              class="bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors"
            >
              <Send class="h-5 w-5" />
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref, nextTick, onUpdated } from 'vue';
import { Send, Bot, User, Mic, Paperclip } from 'lucide-vue-next';

interface Message {
  id: string;
  text: string;
  isBot: boolean;
  timestamp: Date;
}

const messages = ref<Message[]>([
  {
    id: '1',
    text: 'Hello! I am your AI assistant. I can help you with machine learning questions, data analysis, and provide insights on your projects. How can I help you today?',
    isBot: true,
    timestamp: new Date(),
  },
]);
const inputText = ref('');
const isTyping = ref(false);
const messagesContainer = ref<HTMLDivElement | null>(null);

const scrollToBottom = () => {
  if (messagesContainer.value) {
    messagesContainer.value.scrollTop = messagesContainer.value.scrollHeight;
  }
};

onUpdated(() => {
  scrollToBottom();
});

const botResponses = [
  "That's a great question about machine learning! Based on your data, I'd suggest starting with a linear regression model to establish a baseline.",
  "For your dataset, you might want to consider data preprocessing steps like handling missing values and feature scaling before training your model.",
  "The accuracy metric you're seeing suggests your model is performing well. You might also want to look at precision and recall for a more complete picture.",
  "For image classification, I'd recommend trying a convolutional neural network (CNN) or using a pre-trained model like ResNet for better results.",
  "Your clustering results look interesting! K-means is working well here, but you might also want to try DBSCAN for comparison.",
  "Based on the trends in your data, I can see some clear patterns. Would you like me to suggest some visualization techniques to understand them better?",
];

const handleSendMessage = () => {
  if (!inputText.value.trim()) return;

  const userMessage: Message = {
    id: Date.now().toString(),
    text: inputText.value,
    isBot: false,
    timestamp: new Date(),
  };

  messages.value.push(userMessage);
  inputText.value = '';
  isTyping.value = true;

  setTimeout(() => {
    const botMessage: Message = {
      id: (Date.now() + 1).toString(),
      text: botResponses[Math.floor(Math.random() * botResponses.length)],
      isBot: true,
      timestamp: new Date(),
    };
    messages.value.push(botMessage);
    isTyping.value = false;
  }, 1500);
};

const quickActions = [
  'Explain ML basics',
  'Help with data preprocessing',
  'Suggest a model',
  'Interpret my results',
];
</script>

<style scoped>
.message-enter-active,
.message-leave-active {
  transition: all 0.5s ease;
}
.message-enter-from,
.message-leave-to {
  opacity: 0;
  transform: translateY(20px);
}
</style>
