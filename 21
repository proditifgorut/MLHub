<template>
  <div class="space-y-8">
    <div class="bg-white rounded-xl shadow-lg p-8">
      <h2 class="text-2xl font-semibold text-gray-900 mb-6 flex items-center">
        <TrendingUp class="h-6 w-6 mr-2 text-blue-600" />
        Product Recommendation
      </h2>

      <div class="grid md:grid-cols-3 gap-6 mb-6">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Price Range
          </label>
          <select v-model="userPreferences.priceRange" class="w-full p-3 border border-gray-300 rounded-lg">
            <option value="low">$0 - $100</option>
            <option value="medium">$100 - $300</option>
            <option value="high">$300+</option>
          </select>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Category
          </label>
          <select v-model="userPreferences.category" class="w-full p-3 border border-gray-300 rounded-lg">
            <option value="electronics">Electronics</option>
            <option value="clothing">Clothing</option>
            <option value="books">Books</option>
            <option value="home">Home</option>
            <option value="sports">Sports</option>
          </select>
        </div>

        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">
            Brand Preference
          </label>
          <select v-model="userPreferences.brand" class="w-full p-3 border border-gray-300 rounded-lg">
            <option value="any">Any Brand</option>
            <option value="premium">Premium Brands</option>
            <option value="budget">Budget-Friendly</option>
          </select>
        </div>
      </div>

      <button
        @click="handleGetRecommendations"
        class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors flex items-center space-x-2"
      >
        <TrendingUp class="h-5 w-5" />
        <span>Get Recommendations</span>
      </button>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-8">
      <div class="flex items-center justify-between mb-6">
        <h3 class="text-xl font-semibold text-gray-900">Recommended for You</h3>
        <div class="flex items-center space-x-2">
          <Filter class="h-5 w-5 text-gray-400" />
          <select v-model="selectedCategory" class="border border-gray-300 rounded-lg px-3 py-1 text-sm">
            <option v-for="category in categories" :key="category" :value="category">
              {{ category.charAt(0).toUpperCase() + category.slice(1) }}
            </option>
          </select>
        </div>
      </div>

      <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
        <transition-group name="list">
          <div v-for="product in recommendations" :key="product.id" class="border border-gray-200 rounded-lg overflow-hidden hover:shadow-lg transition-shadow">
            <img :src="product.image" :alt="product.name" class="w-full h-48 object-cover" />
            <div class="p-4">
              <h4 class="font-semibold text-gray-900 mb-1 truncate">{{ product.name }}</h4>
              <p class="text-sm text-gray-600 mb-2">{{ product.category }}</p>
              
              <div class="flex items-center justify-between mb-2">
                <span class="text-lg font-bold text-blue-600">${{ product.price }}</span>
                <div class="flex items-center space-x-1">
                  <Star class="h-4 w-4 text-yellow-400 fill-current" />
                  <span class="text-sm text-gray-600">{{ product.rating }}</span>
                  <span class="text-xs text-gray-500">({{ product.reviews }})</span>
                </div>
              </div>

              <div class="flex items-center justify-between mb-3">
                <span class="text-xs text-green-600 bg-green-100 px-2 py-1 rounded">
                  {{ (product.confidence * 100).toFixed(0) }}% match
                </span>
              </div>

              <div class="flex space-x-2">
                <button class="flex-1 bg-blue-600 text-white py-2 px-3 rounded text-sm hover:bg-blue-700 transition-colors flex items-center justify-center space-x-1">
                  <ShoppingCart class="h-4 w-4" />
                  <span>+ Cart</span>
                </button>
                <button class="p-2 border border-gray-300 rounded hover:bg-gray-50 transition-colors">
                  <Heart class="h-4 w-4 text-gray-600" />
                </button>
              </div>
            </div>
          </div>
        </transition-group>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-lg p-8">
      <h3 class="text-xl font-semibold text-gray-900 mb-4">Recommendation Insights</h3>
      <div class="grid md:grid-cols-3 gap-6">
        <div class="text-center">
          <div class="text-3xl font-bold text-blue-600 mb-1">94%</div>
          <div class="text-gray-600">Accuracy Rate</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold text-green-600 mb-1">2.3x</div>
          <div class="text-gray-600">Click-Through Rate</div>
        </div>
        <div class="text-center">
          <div class="text-3xl font-bold text-purple-600 mb-1">87%</div>
          <div class="text-gray-600">User Satisfaction</div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup lang="ts">
import { ref, reactive } from 'vue';
import { TrendingUp, Star, ShoppingCart, Heart, Filter } from 'lucide-vue-next';
import { faker } from '@faker-js/faker';

const selectedCategory = ref('all');
const userPreferences = reactive({
  priceRange: 'medium',
  category: 'electronics',
  brand: 'any',
});

const generateProducts = () => {
  return Array.from({ length: 8 }, () => ({
    id: faker.string.uuid(),
    name: faker.commerce.productName(),
    price: faker.commerce.price({ min: 20, max: 500, dec: 0 }),
    rating: faker.number.float({ min: 3.5, max: 5, fractionDigits: 1 }),
    reviews: faker.number.int({ min: 10, max: 1000 }),
    image: `https://picsum.photos/300/200?random=${faker.number.int({ min: 1, max: 1000 })}`,
    category: faker.helpers.arrayElement(['Electronics', 'Clothing', 'Books', 'Home', 'Sports']),
    confidence: faker.number.float({ min: 0.7, max: 0.98, fractionDigits: 2 }),
  }));
};

const recommendations = ref(generateProducts());
const categories = ['all', 'electronics', 'clothing', 'books', 'home', 'sports'];

const handleGetRecommendations = () => {
  recommendations.value = generateProducts();
};
</script>

<style scoped>
.list-enter-active,
.list-leave-active {
  transition: all 0.5s ease;
}
.list-enter-from,
.list-leave-to {
  opacity: 0;
  transform: translateY(30px);
}
</style>
